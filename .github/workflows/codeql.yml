name: "CodeQL"

on:
  push:
    branches: ["main"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]
    types: [opened, labeled, unlabeled, synchronize]
  schedule:
    # runs on 19:17 every Tuesday
    - cron: "27 19 * * 2"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["go", "javascript-typescript"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # ℹ️ Command-line programs to run using the OS shell.
      # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      # - run: |
      #     echo "Run, Build Application using script"
      #     ./location_of_script_within_repo/buildscript.sh

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  lint-golangci:
    name: "Lint (golangci)"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        id: golangci
        continue-on-error: true
        with:
          version: v1.64
          only-new-issues: true # Shows only issues introduced in the PR
          # see https://github.com/golangci/golangci-lint/issues/4376#issuecomment-1938874827
          args: >
            --out-format sarif:golangci-lint.sarif
            --issues-exit-code=1

      - name: Upload filtered SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: golangci-lint.sarif

      - name: Ensure PR has required labels
        uses: mheap/github-action-required-labels@v5
        id: lint_ignore
        with:
          exit_type: success
          mode: exactly
          count: 1
          labels: "lint-ignore"
          add_comment: true
          message: |
            > [!WARNING]
            >
            > Lint warnings and errors are ignored on this pull request because the `{{ provided }}` label.
            >

      - name: Set exit code based on label and lint results
        if: always()
        run: |
          if [[ "${{ steps.lint_ignore.outputs.status }}" == "success" ]]; then
            echo "::notice::Lint warnings and errors have been ignored for this pull request because the `lint-ignore` label is present."
            exit 0
          elif [[ "${{ steps.golangci.outcome }}" == "failure" ]]; then
            echo "::error::Lint issues found in the code. Please fix them before merging."
            exit 1
          fi

  pr-size-labeler:
    name: PR Size Labeler
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: PR Size Labeler
        uses: codelytv/pr-size-labeler@v1.10.2
        with:
          xs_label: "size/xs"
          xs_max_size: "10"
          s_label: "size/s"
          s_max_size: "100"
          m_label: "size/m"
          m_max_size: "500"
          l_label: "size/l"
          l_max_size: "1000"
          xl_label: "size/xl"
          fail_if_xl: "false"
          files_to_ignore: >
            package-lock.json
            yarn.lock
            go.sum
          ignore_line_deletions: "false"
          ignore_file_deletions: "false"
