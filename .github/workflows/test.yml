name: Tests
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - "README.md"

  push:
    branches:
      - main
      - release/v*
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'examples/**'
      - 'test/**'

  workflow_dispatch:

jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
        id: go

      - name: Get dependencies
        run: |
          make deps

      - name: Build
        run: |
          make build

      - name: Version
        run: |
          make version

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ./build/

  # run acceptance tests
  test:
    name: Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
        id: go

      - name: Get dependencies
        run: |
          make deps

      - name: Acceptance tests
        timeout-minutes: 10
        run: |
          make testacc

  release:
    needs: test
    if: github.event_name == 'push'
    uses: cloudposse/.github/.github/workflows/shared-go-auto-release.yml@main
    with:
      publish: false
      format: binary
    secrets: inherit
    
  # run localstack demo tests
  localstack:
    name: "[localstack] ${{ matrix.demo-folder }}"
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo-folder:
          - demo-localstack

    timeout-minutes: 20
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: /usr/local/bin

      - name: Set execute permissions on atmos
        run: chmod +x /usr/local/bin/atmos

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Start LocalStack
        uses: LocalStack/setup-localstack@v0.2.0
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          SERVICES: s3, iam, lambda, dynamodb, sts, account, ec2
        with:
          image-tag: 'latest'
          install-awslocal: 'true'

      - name: Run tests for ${{ matrix.demo-folder }}
        run: |
          cd examples/${{ matrix.demo-folder }}
          atmos test

      - name: Stop LocalStack
        run: |
          docker stop ${{ steps.localstack.outputs.container_id }}

  # run k3s demo tests
  k3s:
    name: "[k3s] ${{ matrix.demo-folder }}"
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo-folder:
          - demo-helmfile

    timeout-minutes: 20
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: /usr/local/bin

      - name: Set execute permissions on atmos
        run: chmod +x /usr/local/bin/atmos

      - name: Install the cloudposse Debian repository
        run: curl -1sLf 'https://dl.cloudsmith.io/public/cloudposse/packages/cfg/setup/bash.deb.sh' | sudo bash

      - name: Install kubectl, helmfile, and helm
        run: apt-get -y install kubectl helmfile helm

      - name: Install helm-diff plugin
        run: helm plugin install https://github.com/databus23/helm-diff"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.30
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests for ${{ matrix.demo-folder }}
        run: |
          cd examples/${{ matrix.demo-folder }}
          atmos test

  # run other demo tests
  mock:
    name: "[mock] ${{ matrix.demo-folder }}"
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo-folder:
          - demo-atlantis
          # - demo-component-manifest
          - demo-component-versions
          - demo-context
          # - demo-custom-command
          # - demo-json-validation
          # - demo-opa-validation
          # - demo-opentofu
          # - demo-project
          # - demo-stacks
          # - demo-terraform
          # - demo-terraform-overrides
          # - demo-workflows
          # - demo-yaml-anchors
          # - demo-mock-architecture
          # - demo-stack-templating
          # - demo-multi-cloud
          # - demo-vendoring

    timeout-minutes: 20
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: /usr/local/bin

      - name: Set execute permissions on atmos
        run: chmod +x /usr/local/bin/atmos

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Run tests for ${{ matrix.demo-folder }}
        run: |
          cd examples/${{ matrix.demo-folder }}
          atmos test

  # run other demo tests
  lint:
    name: "[lint] ${{ matrix.demo-folder }}"
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        demo-folder:
          # - demo-component-manifest
          - demo-context
          # - demo-custom-command
          # - demo-json-validation
          # - demo-library
          # - demo-localstack
          # - demo-opa-validation
          # - demo-opentofu
          # - demo-project
          # - demo-stacks
          # - demo-terraform
          # - demo-terraform-overrides
          # - demo-workflows
          # - demo-yaml-anchors
          # - demo-mock-architecture
          # - demo-stack-templating
          # - demo-multi-cloud

    timeout-minutes: 20
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.config.outputs.terraform-version }}
          terraform_wrapper: false

      - name: Lint examples/${{ matrix.demo-folder }}/components/terraform
        uses: reviewdog/action-tflint@v1
        with:
          github_token: ${{ secrets.github_token }}
          working_directory: examples/${{ matrix.demo-folder }}/components/terraform
          flags: >-
            --enable-rule=terraform_unused_declarations
            --disable-rule=terraform_typed_variables
            --minimum-failure-severity=warning
            --recursive
            --config=${{ github.workspace }}/examples/.tflint.hcl
          fail_on_error: true
