job "terraform import" {
  concurrency = 1
  description = "Run 'terraform import'"

  parameter "component" {
    type        = string
    description = "Component"
  }

  parameter "addr" {
    type        = string
    description = "addr specifies the address to import the resource to"
  }

  parameter "resid" {
    type        = string
    description = "resid specifies the ID of the resource to import"
  }

  option "command" {
    default     = "terraform"
    type        = string
    description = "Command to execute, e.g. 'terraform', or path to the command, e.g. '/usr/local/terraform/0.13/bin/terraform'"
  }

  # Use either `environment-stage` or `stack` to specify the configuration file for the component
  option "environment" {
    type        = string
    description = "Environment"
    short       = "e"
    default     = ""
  }

  option "stage" {
    type        = string
    description = "Stage"
    short       = "s"
    default     = ""
  }

  # Use either `environment-stage` or `stack` to specify the configuration file for the component
  option "stack" {
    type        = string
    description = "Stack"
    short       = "st"
    default     = ""
  }

  option "role" {
    default     = ""
    description = "The Role ARN to use for 'terraform import'"
    type        = string
  }

  config "env-config" {
    source job {
      name = "terraform config"
      args = {
        component   = param.component
        environment = opt.environment
        stage       = opt.stage
        stack       = opt.stack
        format      = "json"
        merge       = true
      }
    }
  }

  variable "args" {
    type  = list(string)
    value = [
      "-var-file",
      "${conf.env-config.environment}-${conf.env-config.stage}.terraform.tfvars.json",
      param.addr,
      param.resid
    ]
  }

  step "write varfile" {
    run "terraform write varfile" {
      component   = param.component
      environment = opt.environment
      stage       = opt.stage
      stack       = opt.stack
    }
  }

  step "import init" {
    run "terraform init" {
      component   = param.component
      environment = opt.environment
      stage       = opt.stage
      stack       = opt.stack
      command     = opt.command
    }
  }

  step "import workspace" {
    run "terraform workspace" {
      component   = param.component
      environment = opt.environment
      stage       = opt.stage
      stack       = opt.stack
      command     = opt.command
    }
  }

  step "write provider override" {
    run "terraform write override" {
      component = param.component
      role      = opt.role
    }
  }

  step "import cmd" {
    run "terraform subcommand" {
      component   = param.component
      environment = opt.environment
      stage       = opt.stage
      stack       = opt.stack
      command     = opt.command
      subcommand  = "import"
      args        = var.args
    }
  }

  step "apply clean" {
    run "terraform shell" {
      component = param.component
      commands  = ["rm", "override.tf.json"]
    }
  }
}
