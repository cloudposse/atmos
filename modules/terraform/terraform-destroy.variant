#!/usr/bin/env variant
# vim: filetype=hcl

job "terraform destroy" {
  concurrency = 1
  description = "Run 'terraform destroy' for a project"

  parameter "project" {
    type        = string
    description = "Terraform project"
  }

  option "command" {
    default     = "terraform"
    type        = string
    description = "Command to execute, e.g. 'terraform', or path to the command, e.g. '/usr/local/terraform/0.13/bin/terraform'"
  }

  option "environment" {
    default     = ""
    type        = string
    description = "Environment"
    short       = "e"
  }

  option "stage" {
    type        = string
    description = "Stage"
    short       = "s"
  }

  option "args" {
    default     = ""
    description = "A string of arguments to supply to `terraform destroy`"
    type        = string
  }

  variable "default-args" {
    type  = list(string)
    value = [
      "-var-file",
      "${opt.environment}-${opt.stage}.terraform.tfvars.json",
      "-auto-approve"
    ]
  }

  variable "args" {
    type  = list(string)
    value = concat(var.default-args, compact(split(" ", opt.args)))
  }

  config "env-config" {
    source job {
      name = "terraform config"
      args = {
        project     = param.project
        environment = opt.environment
        stage       = opt.stage
        format      = "json"
        merge       = true
      }
    }
  }

  step "write varfile" {
    run "terraform write varfile" {
      project     = param.project
      environment = opt.environment
      stage       = opt.stage
    }
  }

  step "destroy init" {
    run "terraform init" {
      project     = param.project
      command     = opt.command
      environment = opt.environment
      stage       = opt.stage
    }
  }

  step "destroy workspace" {
    run "terraform workspace" {
      project     = param.project
      command     = opt.command
      environment = opt.environment
      stage       = opt.stage
    }
  }

  step "destroy cmd" {
    run "terraform subcommand" {
      project     = param.project
      command     = opt.command
      subcommand  = "destroy"
      environment = opt.environment
      stage       = opt.stage
      args        = var.args
    }
  }

  step "destroy clean" {
    run "terraform shell" {
      project = param.project

      commands = [
        "rm",
        "${conf.env-config.environment}-${conf.env-config.stage}.terraform.tfvars.json"
      ]
    }
  }
}
