// Code generated by MockGen. DO NOT EDIT.
// Source: homedir.go
//
// Generated by this command:
//
//	mockgen -source=homedir.go -destination=mock_homedir.go -package=filesystem
//

// Package filesystem is a generated GoMock package.
package filesystem

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockHomeDirProvider is a mock of HomeDirProvider interface.
type MockHomeDirProvider struct {
	ctrl     *gomock.Controller
	recorder *MockHomeDirProviderMockRecorder
	isgomock struct{}
}

// MockHomeDirProviderMockRecorder is the mock recorder for MockHomeDirProvider.
type MockHomeDirProviderMockRecorder struct {
	mock *MockHomeDirProvider
}

// NewMockHomeDirProvider creates a new mock instance.
func NewMockHomeDirProvider(ctrl *gomock.Controller) *MockHomeDirProvider {
	mock := &MockHomeDirProvider{ctrl: ctrl}
	mock.recorder = &MockHomeDirProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHomeDirProvider) EXPECT() *MockHomeDirProviderMockRecorder {
	return m.recorder
}

// Dir mocks base method.
func (m *MockHomeDirProvider) Dir() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dir")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Dir indicates an expected call of Dir.
func (mr *MockHomeDirProviderMockRecorder) Dir() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dir", reflect.TypeOf((*MockHomeDirProvider)(nil).Dir))
}

// Expand mocks base method.
func (m *MockHomeDirProvider) Expand(path string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Expand", path)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Expand indicates an expected call of Expand.
func (mr *MockHomeDirProviderMockRecorder) Expand(path any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Expand", reflect.TypeOf((*MockHomeDirProvider)(nil).Expand), path)
}
