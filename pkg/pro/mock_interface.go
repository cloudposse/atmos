// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package pro is a generated GoMock package.
package pro

import (
	reflect "reflect"

	dtos "github.com/cloudposse/atmos/pkg/pro/dtos"
	schema "github.com/cloudposse/atmos/pkg/schema"
	gomock "github.com/golang/mock/gomock"
)

// MockAPIClient is a mock of APIClient interface.
type MockAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockAPIClientMockRecorder
}

// MockAPIClientMockRecorder is the mock recorder for MockAPIClient.
type MockAPIClientMockRecorder struct {
	mock *MockAPIClient
}

// NewMockAPIClient creates a new mock instance.
func NewMockAPIClient(ctrl *gomock.Controller) *MockAPIClient {
	mock := &MockAPIClient{ctrl: ctrl}
	mock.recorder = &MockAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIClient) EXPECT() *MockAPIClientMockRecorder {
	return m.recorder
}

// UploadInstances mocks base method.
func (m *MockAPIClient) UploadInstances(req *dtos.InstancesUploadRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadInstances", req)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadInstances indicates an expected call of UploadInstances.
func (mr *MockAPIClientMockRecorder) UploadInstances(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadInstances", reflect.TypeOf((*MockAPIClient)(nil).UploadInstances), req)
}

// MockClientFactory is a mock of ClientFactory interface.
type MockClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockClientFactoryMockRecorder
}

// MockClientFactoryMockRecorder is the mock recorder for MockClientFactory.
type MockClientFactoryMockRecorder struct {
	mock *MockClientFactory
}

// NewMockClientFactory creates a new mock instance.
func NewMockClientFactory(ctrl *gomock.Controller) *MockClientFactory {
	mock := &MockClientFactory{ctrl: ctrl}
	mock.recorder = &MockClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientFactory) EXPECT() *MockClientFactoryMockRecorder {
	return m.recorder
}

// NewClient mocks base method.
func (m *MockClientFactory) NewClient(atmosConfig *schema.AtmosConfiguration) (APIClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewClient", atmosConfig)
	ret0, _ := ret[0].(APIClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewClient indicates an expected call of NewClient.
func (mr *MockClientFactoryMockRecorder) NewClient(atmosConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewClient", reflect.TypeOf((*MockClientFactory)(nil).NewClient), atmosConfig)
}
