// Code generated by MockGen. DO NOT EDIT.
// Source: pager.go

// Package pager is a generated GoMock package.
package pager

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPageCreator is a mock of PageCreator interface.
type MockPageCreator struct {
	ctrl     *gomock.Controller
	recorder *MockPageCreatorMockRecorder
}

// MockPageCreatorMockRecorder is the mock recorder for MockPageCreator.
type MockPageCreatorMockRecorder struct {
	mock *MockPageCreator
}

// NewMockPageCreator creates a new mock instance.
func NewMockPageCreator(ctrl *gomock.Controller) *MockPageCreator {
	mock := &MockPageCreator{ctrl: ctrl}
	mock.recorder = &MockPageCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPageCreator) EXPECT() *MockPageCreatorMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockPageCreator) Run(title, content string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", title, content)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockPageCreatorMockRecorder) Run(title, content interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockPageCreator)(nil).Run), title, content)
}
