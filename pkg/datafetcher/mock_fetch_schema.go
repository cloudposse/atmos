// Code generated by MockGen. DO NOT EDIT.
// Source: fetch_schema.go

// Package validator is a generated GoMock package.
package datafetcher

import (
	reflect "reflect"

	schema "github.com/cloudposse/atmos/pkg/schema"
	gomock "github.com/golang/mock/gomock"
)

// MockFetcher is a mock of Fetcher interface.
type MockFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockFetcherMockRecorder
}

// MockFetcherMockRecorder is the mock recorder for MockFetcher.
type MockFetcherMockRecorder struct {
	mock *MockFetcher
}

// NewMockFetcher creates a new mock instance.
func NewMockFetcher(ctrl *gomock.Controller) *MockFetcher {
	mock := &MockFetcher{ctrl: ctrl}
	mock.recorder = &MockFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFetcher) EXPECT() *MockFetcherMockRecorder {
	return m.recorder
}

// Fetch mocks base method.
func (m *MockFetcher) Fetch() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fetch")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fetch indicates an expected call of Fetch.
func (mr *MockFetcherMockRecorder) Fetch() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fetch", reflect.TypeOf((*MockFetcher)(nil).Fetch))
}

// MockDataFetcher is a mock of DataFetcher interface.
type MockDataFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockDataFetcherMockRecorder
}

// MockDataFetcherMockRecorder is the mock recorder for MockDataFetcher.
type MockDataFetcherMockRecorder struct {
	mock *MockDataFetcher
}

// NewMockDataFetcher creates a new mock instance.
func NewMockDataFetcher(ctrl *gomock.Controller) *MockDataFetcher {
	mock := &MockDataFetcher{ctrl: ctrl}
	mock.recorder = &MockDataFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataFetcher) EXPECT() *MockDataFetcherMockRecorder {
	return m.recorder
}

// GetData mocks base method.
func (m *MockDataFetcher) GetData(atmosConfig *schema.AtmosConfiguration, source string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData", atmosConfig, source)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetData indicates an expected call of GetData.
func (mr *MockDataFetcherMockRecorder) GetData(atmosConfig, source interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockDataFetcher)(nil).GetData), atmosConfig, source)
}
