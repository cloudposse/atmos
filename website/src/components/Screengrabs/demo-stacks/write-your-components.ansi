# Here's an example of how to organize components
[1;92m>[0m tree components[0m

[01;34mcomponents[0m/
â””â”€â”€ [01;34mterraform[0m/
    â””â”€â”€ [01;34mmyapp[0m/
        â”œâ”€â”€ [00mREADME.md[0m
        â”œâ”€â”€ [00mmain.tf[0m
        â”œâ”€â”€ [00moutputs.tf[0m
        â”œâ”€â”€ [00mvariables.tf[0m
        â””â”€â”€ [00mversions.tf[0m

3 directories, 5 files


[1;92m>[0m # Let's take a look at myapp terraform 'root' module...[0m
[1;92m>[0m # This is a simple example of retrieving the weather.[0m
[1;92m>[0m # Taking a closer look at the main.tf, you'll notice it accepts a lot of parameters.[0m
[1;92m>[0m # This is a best practice for writing reusable components.[0m
[1;92m>[0m [0m
[1;92m>[0m cat components/terraform/myapp/main.tf[0m

/Users/andriyknysh/Documents/Projects/Go/src/github.com/cloudposse/atmos/demo/screengrabs/scripts/demo-stacks/.demo.rc: line 39: bat: command not found


[1;92m>[0m # Then we define all the variables we plan to accept.[0m
[1;92m>[0m # Generally, we recommend avoiding defaults here and using baseline stack configurations.[0m
[1;92m>[0m [0m
[1;92m>[0m cat components/terraform/myapp/variables.tf[0m

/Users/andriyknysh/Documents/Projects/Go/src/github.com/cloudposse/atmos/demo/screengrabs/scripts/demo-stacks/.demo.rc: line 39: bat: command not found


[1;92m>[0m # Then let's provide some outputs that can be used by other components.[0m
[1;92m>[0m [0m
[1;92m>[0m cat components/terraform/myapp/outputs.tf[0m

/Users/andriyknysh/Documents/Projects/Go/src/github.com/cloudposse/atmos/demo/screengrabs/scripts/demo-stacks/.demo.rc: line 39: bat: command not found


[1;92m>[0m # It's a best practice to pin versions, so let's do that.[0m
[1;92m>[0m [0m
[1;92m>[0m cat components/terraform/myapp/versions.tf[0m

/Users/andriyknysh/Documents/Projects/Go/src/github.com/cloudposse/atmos/demo/screengrabs/scripts/demo-stacks/.demo.rc: line 39: bat: command not found
