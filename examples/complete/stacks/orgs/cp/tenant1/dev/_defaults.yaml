import:
  - mixins/stage/dev
  - orgs/cp/tenant1/_defaults

settings:
  atlantis:

    # Override the org-wide config template selected in `examples/complete/stacks/orgs/cp/_defaults.yaml`
    # in the `settings.atlantis.config_template_name` section
    config_template:
      version: 3
      automerge: true
      delete_source_branch_on_merge: true
      parallel_plan: true
      parallel_apply: true
      allowed_regexp_prefixes:
        - dev/

    # Override the org-wide project template selected in `examples/complete/stacks/orgs/cp/_defaults.yaml`
    # in the `settings.atlantis.project_template_name` section
    project_template:
      # generate a project entry for each component in every stack
      name: "{tenant}-{environment}-{stage}-{component}"
      workspace: "{workspace}"
      dir: "{component-path}"
      terraform_version: v1.3
      delete_source_branch_on_merge: true
      autoplan:
        enabled: true
        when_modified:
          - "**/*.tf"
          - "varfiles/$PROJECT_NAME.tfvars.json"
      apply_requirements:
        - "approved"

    # Override the org-wide workflow template selected in `examples/complete/stacks/orgs/cp/_defaults.yaml`
    # in the `settings.atlantis.workflow_template_name` section
    workflow_template:
      plan:
        steps:
          - run: terraform init
          # When using workspaces, you need to select the workspace using the $WORKSPACE environment variable
          - run: terraform workspace select $WORKSPACE || terraform workspace new $WORKSPACE
          # You must output the plan using '-out $PLANFILE' because Atlantis expects plans to be in a specific location
          - run: terraform plan -input=false -refresh -out $PLANFILE -var-file varfiles/$PROJECT_NAME.tfvars.json
      apply:
        steps:
          - run: terraform apply $PLANFILE
