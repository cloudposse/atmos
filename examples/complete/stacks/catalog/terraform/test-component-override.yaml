# `import` supports POSIX-style Globs for file names/paths (double-star `**` is supported)
# https://en.wikipedia.org/wiki/Glob_(programming)
# https://pkg.go.dev/gopkg.in/godo.v2/glob
# https://github.com/bmatcuk/doublestar
# File extensions are optional (if not specified, `.yaml` is used by default)
import:
  - catalog/terraform/services/service-?-override.*

components:
  terraform:
    "test/test-component-override":
      # Specify terraform binary to run
      command: "/usr/local/bin/terraform"
      # By using `component` attribute, `test-component-override` inherits from `test-component` and can override its variables
      # In this example, variables for each service are overridden in `catalog/services/service-?-override.*`
      component: "test/test-component"
      # Other variables can be overridden here
      vars: {}
      # Setting `deployable: false` explicitly prohibits the component from being deployed
      # and Spacelift stack from being created for the component (even if `settings.spacelift.workspace_enabled: true`)
      # `terraform apply` and `terraform deploy` will fail with an error
      # All other terraform commands on this component will succeed
      # If `deployable` attribute is not specified, it defaults to `true`
      deployable: true
      env:
        TEST_ENV_VAR1: "val1-override"
        TEST_ENV_VAR3: "val3-override"
        TEST_ENV_VAR4: "val4"
      # Override remote state backend for this component
      remote_state_backend_type: static # s3, remote, vault, static, etc.
      remote_state_backend:
        static:
          val1: true
          val2: "2"
          val3: 3
          val4: null
