
[0m[1mInitializing the backend...[0m

[0m[1mInitializing provider plugins...[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[31m
Workspace "nonprod" doesn't exist.

You can create this workspace with the "new" subcommand 
or include the "-or-create" flag with the "select" subcommand.[0m[0m
[0m[32m[1mCreated and switched to workspace "nonprod"![0m[32m

You're now on a new, empty workspace. Workspaces isolate their state,
so if you run "terraform plan" Terraform will not see any existing state
for this configuration.[0m

Changes to Outputs:
  [32m+[0m[0m bar = "bar nonprod override"
  [32m+[0m[0m baz = "baz catalog default"
  [32m+[0m[0m foo = "foo nonprod override"

You can apply this plan to save these new output values to the Terraform
state, without changing any real infrastructure.
[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mValue for undeclared variable[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0mThe root module does not declare a variable named "stage" but a value was
[33mâ”‚[0m [0mfound in file "nonprod-mock.terraform.tfvars.json". If you meant to use
[33mâ”‚[0m [0mthis value, add a "variable" block to the configuration.
[33mâ”‚[0m [0m
[33mâ”‚[0m [0mTo silence these warnings, use TF_VAR_... environment variables to provide
[33mâ”‚[0m [0mcertain "global" settings to all configurations in your organization. To
[33mâ”‚[0m [0mreduce the verbosity of these warnings, use the -compact-warnings option.
[33mâ•µ[0m[0m
[0m[1m[32m
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mbar = "bar nonprod override"
baz = "baz catalog default"
foo = "foo nonprod override"
âœ“ Deleted workflows/../../components/terraform/mock/.terraform/
âœ“ Deleted workflows/../../components/terraform/mock/terraform.tfstate.d/nonprod/terraform.tfstate
