# yaml-language-server: $schema=schema.json

# Comprehensive auth tests using mock provider for full end-to-end testing
# without requiring real cloud credentials.
#
# These tests verify:
# - Authentication workflows (login, whoami, logout)
# - Credential caching behavior
# - Environment variable generation
# - Command execution with authenticated identities
# - Multi-identity scenarios

tests:
  # ============================================================================
  # Auth Login Tests with Mock Provider
  # ============================================================================

  - name: atmos auth login --identity mock-identity
    enabled: true
    snapshot: true
    description: "Test successful login with mock identity"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "login"
      - "--identity"
      - "mock-identity"
    expect:
      diff: []
      ignore_trailing_whitespace: true  # Lipgloss table padding varies by platform/terminal width
      stderr:
        - "Authentication successful"
        - "mock-identity"
      exit_code: 0

  - name: atmos auth login with default identity
    enabled: true
    snapshot: true
    description: "Test login using default identity (mock-identity is default)"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "login"
    expect:
      diff: []
      ignore_trailing_whitespace: true  # Lipgloss table padding varies by platform/terminal width
      stderr:
        - "Authentication successful"
        - "mock-identity"
      exit_code: 0

  - name: atmos auth login --identity mock-identity-2
    enabled: true
    snapshot: true
    description: "Test login with second mock identity (known issue: logs show default identity name)"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "login"
      - "--identity"
      - "mock-identity-2"
    expect:
      diff: []
      ignore_trailing_whitespace: true  # Lipgloss table padding varies by platform/terminal width
      stderr:
        - "Authentication successful"
        - "mock-identity"  # TODO: Should be "mock-identity-2" but logs show default identity
      exit_code: 0

  # ============================================================================
  # Auth Whoami Tests - Verify Credential Information
  # ============================================================================

  - name: atmos auth whoami without authentication
    enabled: true
    snapshot: true
    description: "Test whoami succeeds by loading credentials from identity storage (mock provider)"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "whoami"
      - "--identity"
      - "mock-identity"
    expect:
      diff:
        - "Expires"
        - "Last Updated"
      stderr:
        - "Credentials not in keyring, trying to load from identity storage"
        - "Loaded credentials from identity storage"
        - "Current Authentication Status"
        - "mock-identity"
      stdout: []
      exit_code: 0

  # ============================================================================
  # Auth Env Tests - Environment Variable Generation
  # ============================================================================

  - name: atmos auth env --format json --identity mock-identity
    enabled: true
    snapshot: true
    description: "Test env command outputs JSON format without authentication (returns env vars from config)"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "env"
      - "--format"
      - "json"
      - "--identity"
      - "mock-identity"
    expect:
      diff: []
      stderr: []
      exit_code: 0

  - name: atmos auth env --format bash --identity mock-identity
    enabled: true
    snapshot: true
    description: "Test env command outputs bash export format without authentication (returns env vars from config)"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "env"
      - "--format"
      - "bash"
      - "--identity"
      - "mock-identity"
    expect:
      diff: []
      stderr: []
      exit_code: 0

  - name: atmos auth env --format dotenv --identity mock-identity
    enabled: true
    snapshot: true
    description: "Test env command outputs dotenv format without authentication (returns env vars from config)"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "env"
      - "--format"
      - "dotenv"
      - "--identity"
      - "mock-identity"
    expect:
      diff: []
      stderr: []
      exit_code: 0

  # ============================================================================
  # Auth Env --login Flag Tests - Authentication Behavior
  # ============================================================================

  - name: atmos auth env --login without cached credentials
    enabled: true
    snapshot: true
    description: "Test env --login loads credentials from identity storage when no cached credentials exist"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "env"
      - "--login"
      - "--format"
      - "json"
      - "--identity"
      - "mock-identity"
    expect:
      diff: []
      stderr:
        - "Credentials not in keyring, trying to load from identity storage"
        - "Loaded credentials from identity storage"
      stdout:
        - "AWS_PROFILE"
        - "mock-identity"
      exit_code: 0

  - name: atmos auth env --login --format bash
    enabled: true
    snapshot: true
    description: "Test env --login outputs bash format after loading credentials"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "env"
      - "--login"
      - "--format"
      - "bash"
      - "--identity"
      - "mock-identity"
    expect:
      diff: []
      stderr:
        - "Credentials not in keyring, trying to load from identity storage"
      stdout:
        - "export AWS_PROFILE='mock-identity'"
      exit_code: 0

  - name: atmos auth env without --login returns config env vars
    enabled: true
    snapshot: true
    description: "Test env without --login returns environment variables from config without authentication"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "env"
      - "--format"
      - "bash"
      - "--identity"
      - "mock-identity"
    expect:
      diff: []
      stderr: []
      stdout:
        - "export AWS_PROFILE='mock-identity'"
      exit_code: 0

  # ============================================================================
  # Auth Exec Tests - Command Execution with Credentials
  # ============================================================================

  - name: atmos auth exec without authentication
    enabled: true
    snapshot: true
    description: "Test exec succeeds with mock provider (loads credentials from identity storage)"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "exec"
      - "--identity"
      - "mock-identity"
      - "--"
      - "echo"
      - "test"
    expect:
      diff: []
      stderr:
        - "Credentials not in keyring, trying to load from identity storage"
        - "Loaded credentials from identity storage"
      stdout:
        - "test"
      exit_code: 0

  # ============================================================================
  # Auth List Tests - List Available Identities
  # ============================================================================

  - name: atmos auth list
    enabled: true
    snapshot: true
    description: "Test list command shows all identities"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    args:
      - "auth"
      - "list"
    expect:
      diff: []
      stdout:
        - "mock-identity"
        - "mock-identity-2"
        - "mock-provider"
      exit_code: 0

  - name: atmos auth list --format json
    enabled: true
    snapshot: true
    description: "Test list command JSON output"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    args:
      - "auth"
      - "list"
      - "--format"
      - "json"
    expect:
      diff: []
      stdout:
        - '"mock-identity"'
        - '"mock-identity-2"'
      exit_code: 0

  # ============================================================================
  # Auth Logout Tests
  # ============================================================================

  - name: atmos auth logout --identity nonexistent
    enabled: false  # Disabled: logout requires TTY for confirmation prompt
    snapshot: true
    description: "Test logout with non-existent identity"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "logout"
      - "--identity"
      - "nonexistent"
    expect:
      diff: []
      stderr:
        - "identity not found"
      exit_code: 1

  - name: atmos auth logout --all
    enabled: false  # Disabled: --all flag doesn't exist in current implementation
    snapshot: true
    description: "Test logout all identities"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    env:
      ATMOS_KEYRING_TYPE: "memory"
    args:
      - "auth"
      - "logout"
      - "--all"
    expect:
      diff: []
      stderr:
        - "unknown flag"
      exit_code: 1

  # ============================================================================
  # Auth Validate Tests
  # ============================================================================

  - name: atmos auth validate with mock provider
    enabled: true
    snapshot: true
    description: "Test validation passes for mock provider config"
    workdir: "fixtures/scenarios/atmos-auth-mock/"
    command: "atmos"
    args:
      - "auth"
      - "validate"
    expect:
      diff: []
      stdout:
        - "Authentication configuration is valid"
      exit_code: 0
