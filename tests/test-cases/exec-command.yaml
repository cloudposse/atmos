tests:
  - name: atmos exit code should be same as command exit code (2)
    enabled: true
    description: "Ensure the exit code equals the command exit code for a passing terraform plan (expected to be 2)"
    workdir: "fixtures/scenarios/exitCode"
    clean: true
    command: "atmos"
    args:
      - terraform
      - plan
      - component1
      - "-s"
      - test
      - "--"
      - "-detailed-exitcode"
    expect:
      # we are expecting exit code 2 because terraform plan with flag -detailed-exitcode returns exit code 2 in case the plan was displayed with diff
      exit_code: 2
  - name: atmos exit code should be same as command exit code (0)
    enabled: true
    description: "Ensure the exit code equals the command exit code for a passing terraform apply (expected to be 0)"
    workdir: "fixtures/scenarios/exitCode"
    clean: true
    command: "atmos"
    args:
      - terraform
      - apply
      - component1
      - "-s"
      - test
      - "--"
      - "-auto-approve"
    expect:
      # we are expecting exit code 0 because the terraform would exit with exit code 0. 
      # This is because component1 passes the variable exit_code=0. The main aim of this test case is to sync the exit codes of terraform with atmos cli
      exit_code: 0
  - name: atmos exit code should be same as command exit code (1)
    enabled: true
    description: "Ensure the exit code equals the command exit code for a failing terraform apply (expected to be 1)"
    workdir: "fixtures/scenarios/exitCode"
    clean: true
    command: "atmos"
    args:
      - terraform
      - apply
      - component2
      - "-s"
      - test
      - "--"
      - "-auto-approve"
    expect:
      # we are expecting exit code 1 because the terraform would exit with exit code 1. 
      # This is because component2 passes the variable exit_code=1. The main aim of this test case is to sync the exit codes of terraform with atmos cli
      exit_code: 1
