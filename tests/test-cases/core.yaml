tests:
  - name: "which atmos"
    enabled: true
    snapshot: true
    description: "Ensure atmos CLI is installed and we're using the one that was built."
    workdir: "../"
    command: "which"
    args:
      - "atmos"
    expect:
      diff: []
      stdout:
        - '(build[/\\]atmos|atmos[/\\]atmos)'
      stderr:
        - "^$"
      exit_code: 0

  - name: "atmos"
    enabled: true
    snapshot: true
    description: "Verify atmos CLI reports missing stacks directory."
    workdir: "../"
    command: "atmos"
    expect:
      diff: []
      stdout:
        - "atmos.yaml CLI config file specifies the directory for Atmos stacks as stacks,"
        - "but the directory does not exist."
      stderr:
        - "^$"
      exit_code: 0

  - name: atmos docs
    enabled: true
    snapshot: true
    description: "Ensure atmos docs command executes without errors."
    workdir: "../"
    command: "atmos"
    args:
      - "docs"
    expect:
      diff: []
      exit_code: 0
      stderr:
        - "^$"

  - name: atmos non-existent
    enabled: true
    snapshot: true
    description: "Ensure atmos CLI returns an error for a non-existent command."
    workdir: "../"
    command: "atmos"
    args:
      - "non-existent"
    expect:
      diff: []
      stderr:
        - 'unknown command "non-existent" for "atmos"'
      exit_code: 1

  - name: atmos terraform non-existent
    enabled: false
    snapshot: true
    description: "Ensure atmos CLI returns an error for a non-existent command."
    workdir: "../"
    command: "atmos"
    args:
      - "terraform"
      - "non-existent"
    expect:
      diff: []
      stderr:
        - 'unknown command "non-existent" for "atmos"'
      exit_code: 1
