tests:
  # Test that atmos warns if not run inside of a git repo without an atmos config
  - name: atmos warns if not in git repo with no atmos config
    enabled: true
    snapshot: true
    description: "Test that atmos warns if not run inside of a git repo without an atmos config"
    workdir: "/"
    command: "atmos"
    args: []
    env:
      ATMOS_LOGS_LEVEL: Warning
    # Atmos should fail and include the git repo warning
    expect:
      diff: []
      stderr:
        - ".*You're not inside a git repository. Atmos feels lonely outside - bring it home!.*"
      exit_code: 1 # We expect a non-zero exit code because the dir doesnt have an atmos config

  # Test that atmos doesnt warn if not run inside of a git repo but has an atmos config
  # This test is disabled because:
  # 1. verifyInsideGitRepo() is called unconditionally in cmd_utils.go:511
  # 2. It always warns when not in a git repo, even with atmos.yaml present
  # 3. The test expectation (no warning) conflicts with current implementation
  # TODO: Decide if warning should be suppressed when atmos.yaml is found
  - name: atmos doesnt warn if not in git repo with atmos config
    enabled: false
    snapshot: false
    description: "Test that atmos doesnt warn if not run inside of a git repo but has an atmos config"
    workdir: "/"
    command: "atmos"
    args:
      - list
      - stacks
    env:
      ATMOS_LOGS_LEVEL: Warning
    expect:
      diff: []
      stdout:
        - !not ".*You're not inside a git repository\\. Atmos feels lonely outside - bring it home!.*"
      stderr:
        - "^$"
      exit_code: 0

  # Test that atmos doesnt warn if run inside of a git repo with an atmos config
  - name: atmos doesnt warn if in git repo with atmos config
    enabled: true
    snapshot: true
    description: "Test that atmos doesnt warn if run inside of a git repo with an atmos config"
    workdir: "fixtures/scenarios/complete"
    command: "atmos"
    args:
      - list
      - stacks
    env:
      ATMOS_LOGS_LEVEL: Warning
    # Atmos should pass and not include the git repo warning
    expect:
      diff: []
      stdout:
        - !not ".*You're not inside a git repository\\. Atmos feels lonely outside - bring it home!.*"
      stderr:
        - "Telemetry Enabled"
      exit_code: 0

  # Test that atmos doesnt warn if run inside of a git repo with no atmos config
  - name: atmos doesnt warn if in git repo with no atmos config
    enabled: true
    snapshot: true
    description: "Test that atmos doesnt warn if run inside of a git repo with no atmos config"
    workdir: "fixtures/scenarios/empty-dir"
    command: "atmos"
    args: []
    env:
      ATMOS_LOGS_LEVEL: Warning
    # Atmos should fail but not include the git repo warning
    expect:
      diff: []
      stderr:
        - !not ".*You're not inside a git repository\\. Atmos feels lonely outside - bring it home!.*"
      exit_code: 1