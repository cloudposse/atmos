{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
      "tests": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the test."
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether the test is enabled or not."
            },
            "short": {
              "type": "boolean",
              "description": "If false, skip this test when running with -short flag. Use for tests taking >2 seconds (network I/O, Git operations, heavy processing). Defaults to true.",
              "default": true
            },
            "tty": {
              "type": "boolean",
              "description": "Whether to run the test with a TTY."
            },
            "description": {
              "type": "string",
              "description": "A short description of the test."
            },
            "workdir": {
              "type": "string",
              "description": "The working directory for the test."
            },
            "command": {
              "type": "string",
              "description": "The command to execute."
            },
            "args": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The arguments to pass to the command.",
              "default": []
            },
            "sandbox": {
              "oneOf": [
                {
                  "type": "boolean",
                  "description": "Enable/disable sandboxing."
                },
                {
                  "type": "string",
                  "description": "Sandbox name for isolated component copies."
                }
              ],
              "description": "Run test in a sandboxed environment. Use boolean to enable/disable or string to specify sandbox name.",
              "default": false
            },
            "env": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Environment variables to set for the command execution."
            },
            "clean": {
              "type": "boolean",
              "description": "Remove untracked files in work directory after test.",
              "default": false
            },
            "snapshot": {
              "type": "boolean",
              "description": "Enable snapshot comparison for test output.",
              "default": false
            },
            "preconditions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required preconditions for test execution (e.g., 'git', 'aws-cli')."
            },
            "skip": {
              "type": "object",
              "properties": {
                "os": {
                  "anyOf": [
                    { "type": "string" },
                    {
                      "type": "object",
                      "properties": {
                        "not": { "type": "string" }
                      },
                      "required": ["not"]
                    }
                  ],
                  "description": "OS pattern to skip test on (e.g., 'windows', 'darwin', 'linux')."
                }
              },
              "description": "Conditions under which to skip the test."
            },
            "expect": {
              "type": "object",
              "properties": {
                "stdout": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "type": "string" },
                      {
                        "type": "object",
                        "properties": {
                          "not": { "type": "string" }
                        },
                        "required": ["not"]
                      }
                    ]
                  },
                  "description": "Expected patterns in stdout (non-TTY mode)."
                },
                "stderr": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "type": "string" },
                      {
                        "type": "object",
                        "properties": {
                          "not": { "type": "string" }
                        },
                        "required": ["not"]
                      }
                    ]
                  },
                  "description": "Expected patterns in stderr (non-TTY mode)."
                },
                "tty": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "type": "string" },
                      {
                        "type": "object",
                        "properties": {
                          "not": { "type": "string" }
                        },
                        "required": ["not"]
                      }
                    ]
                  },
                  "description": "Expected patterns in combined TTY output (TTY mode - stdout and stderr merged)."
                },
                "exit_code": {
                  "type": "integer",
                  "description": "Expected exit code of the command."
                },
                "valid": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["yaml", "json"]
                  },
                  "description": "Format validations for stdout output."
                },
                "file_exists": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of file paths that should exist after command execution."
                },
                "file_not_exists": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of file paths that should not exist after command execution."
                },
                "file_contains": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        { "type": "string" },
                        {
                          "type": "object",
                          "properties": {
                            "not": { "type": "string" }
                          },
                          "required": ["not"]
                        }
                      ]
                    }
                  },
                  "description": "Map of file paths to expected content patterns."
                },
                "diff": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Regex patterns for lines to ignore during snapshot comparison."
                },
                "timeout": {
                  "type": "string",
                  "description": "Maximum execution time (e.g., '1s', '1m', '1h' or a number in seconds).",
                  "default": "120s"
                },
                "ignore_trailing_whitespace": {
                  "type": "boolean",
                  "description": "Strip trailing whitespace from each line before snapshot comparison. Useful for lipgloss table padding that varies by platform/terminal width.",
                  "default": false
                }
              },
              "required": ["exit_code"],
              "description": "Expectations for the test."
            }
          },
          "required": ["name", "enabled", "workdir", "command", "expect"]
        }
      }
    },
    "required": ["tests"]
  }
