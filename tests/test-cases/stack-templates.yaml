tests:
  - name: "atmos stack manifest templates test 1"
    enabled: true
    tty: false
    description: "Ensure the Go templates are evaluated in all Atmos sections."
    workdir: "fixtures/scenarios/stack-templates/"
    command: "atmos"
    args:
      - "describe"
      - "component"
      - "component-1"
      - "-s"
      - "nonprod"
    expect:
      exit_code: 0
      stdout:
        - "workspace_key_prefix: mock"
        - "bucket: nonprod-tfstate"
        - "dynamodb_table: nonprod-tfstate-lock"
        - "foo: component-1-a"
        - "bar: component-1-b"
        - "baz: component-1-c"

  - name: "atmos stack manifest templates test 2"
    enabled: true
    tty: false
    description: "Ensure the Go templates are evaluated when executing 'atmos terraform generate backend."
    workdir: "fixtures/scenarios/stack-templates/"
    command: "atmos"
    args:
      - "terraform"
      - "generate"
      - "backend"
      - "component-1"
      - "-s"
      - "nonprod"
    env:
      ATMOS_LOGS_LEVEL: Debug
    expect:
      exit_code: 0
      stderr:
        - "nonprod-tfstate"
        - "nonprod-tfstate-lock"

  - name: "atmos stack manifest templates with init"
    enabled: true
    tty: false
    description: "Ensure the Go templates are evaluated for the backend when executing 'atmos terraform init."
    workdir: "fixtures/scenarios/stack-templates/"
    command: "atmos"
    args:
      - "terraform"
      - "init"
      - "component-1"
      - "-s"
      - "nonprod"
    env:
      ATMOS_LOGS_LEVEL: Debug
    expect:
      exit_code: 0
      stderr:
        - "nonprod-tfstate"
        - "nonprod-tfstate-lock"
