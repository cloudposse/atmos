tests:
  - name: atmos non-existent
    enabled: true
    snapshot: true
    description: "Ensure atmos CLI returns an error for a non-existent command."
    workdir: "../"
    command: "atmos"
    args:
      - "non-existent"
    expect:
      stderr:
        - 'Error: Unknown command \"non-existent\" for \"atmos\"'
      exit_code: 1
  - name: atmos --help
    enabled: true
    snapshot: true
    description: "Ensure atmos CLI help command lists available commands."
    workdir: "./"
    command: "atmos"
    args:
      - "--help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Usage:"
        - "Available Commands:"
        - "\\batlantis\\b"
        - "\\baws\\b"
        - "\\bcompletion\\b"
        - "\\bdescribe\\b"
        - "\\bdocs\\b"
        - "\\bhelmfile\\b"
        - "\\bhelp\\b"
        - "\\blist\\b"
        - "\\bpro\\b"
        - "\\bterraform\\b"
        - "\\bvalidate\\b"
        - "\\bvendor\\b"
        - "\\bversion\\b"
        - "\\bworkflow\\b"
        - "SubCommand Aliases:"
        - "\\bhf\\b"
        - "Flags:"
        - "\\batmos \\[subcommand\\] [<]component[>] -s [<]stack[>] -- [<]native-flags[>]"
        - "for more information about a command"
      stderr:
        - "^$"
      exit_code: 0
  - name: atmos
    enabled: true
    snapshot: true
    description: "Ensure atmos CLI help command shows atmos config "
    workdir: "./"
    command: "atmos"
    expect:
      stdout:
        - "atmos.yaml CLI config file was not found"
        - "The default Atmos stacks directory is set to stacks,"
      stderr:
        - "^$"
      exit_code: 1
  - name: atmos terraform
    enabled: true
    snapshot: true
    description: "Ensure atmos terraform cli shows usage command"
    workdir: "./"
    command: "atmos"
    args:
      - "terraform"
    expect:
      stdout:
        - "Valid subcommands are:"
        - "apply"
        - "clean"
        - "console"
      stderr:
        - "Error: Unknown command: \"atmos terraform\""
      exit_code: 1
  - name: atmos terraform help
    enabled: true
    snapshot: true
    description: "Ensure 'atmos terraform help' shows help output"
    workdir: "./"
    command: "atmos"
    args:
      - "terraform"
      - "help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "\\bapply\\b"
        - "\\bgenerate\\b"
      stderr:
        - "^$"
      exit_code: 0
  - name: atmos terraform --help
    enabled: true
    description: "Ensure atmos terraform --help shows help output"
    workdir: "./"
    command: "atmos"
    args:
      - "terraform"
      - "--help"
    expect:
      stdout:
        - "\\bapply\\b"
        - "\\bgenerate\\b"
      stderr:
        - "^$"
      exit_code: 0
  - name: atmos terraform apply --help
    enabled: true
    snapshot: true
    description: "Ensure atmos terraform apply --help shows help output"
    workdir: "./"
    command: "atmos"
    args:
      - "terraform"
      - "apply"
      - "--help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "\\bUsage\\b"
        - "Flags:"
        - "and the beginning of additional native arguments and flags for the specific command being run"
      stderr:
        - "^$"
      exit_code: 0
  - name: atmos terraform apply help
    enabled: true
    snapshot: true
    description: "Ensure atmos terraform help shows help output"
    workdir: "./"
    command: "atmos"
    args:
      - "terraform"
      - "apply"
      - "--help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "\\bUsage\\b"
        - "Flags:"
        - "and the beginning of additional native arguments and flags for the specific command being run"
      stderr:
        - "^$"
      exit_code: 0
  - name: atmos terraform non-existent
    enabled: true
    snapshot: true
    description: "Ensure atmos terraform CLI returns an error for a non-existent command."
    workdir: "../"
    command: "atmos"
    args:
      - "terraform"
      - "non-existent"
    expect:
      stderr:
        - 'Error: Unknown command \"non-existent\" for \"atmos terraform\"'
      exit_code: 1
  - name: atmos terraform plan non-existent in non workspace
    enabled: true
    snapshot: true
    description: "Ensure atmos terraform CLI returns an error for a non-existent command in non existing workspace."
    workdir: "../"
    command: "atmos"
    args:
      - "terraform"
      - "plan"
      - "non-existent"
    expect:
      stdout:
        - "CLI config file specifies the directory for Atmos stack"
        - "Quick Start"
      exit_code: 1
  - name: atmos terraform plan non-existent in workspace
    enabled: true
    snapshot: true
    description: "Ensure atmos terraform CLI returns an error for a non-existent command in existing workspace."
    workdir: "../examples/quick-start-simple"
    command: "atmos"
    args:
      - "terraform"
      - "plan"
      - "non-existent"
    expect:
      stderr:
        - "'stack' is required. Usage: atmos terraform <command> <component> -s <stack>"
      exit_code: 1
  - name: atmos helmfile
    enabled: true
    snapshot: true
    description: "Should show usage for helmfile"
    workdir: "../"
    command: "atmos"
    args:
      - "helmfile"
    expect:
      stderr:
        - "Error: Unknown command: \"atmos helmfile\""
      stdout:
        - "Valid subcommands are:"
        - "apply"
        - "destroy"
      exit_code: 1
  - name: atmos helmfile non-existant
    enabled: true
    snapshot: true
    description: "Should show usage for helmfile and non-existant subcommand"
    workdir: "../"
    command: "atmos"
    args:
      - "helmfile"
      - "non-existant"
    expect:
      stderr:
        - "Error: Unknown command \"non-existant\" for \"atmos helmfile\""
      stdout:
        - "Valid subcommands are:"
        - "apply"
        - "destroy"
      exit_code: 1
  - name: atmos helmfile help
    enabled: true
    snapshot: true
    description: "Should show help for helmfile"
    workdir: "../"
    command: "atmos"
    args:
      - "helmfile"
      - "help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Available Commands:"
        - "apply"
        - "destroy"
      exit_code: 0
  - name: atmos helmfile --help
    enabled: true
    snapshot: true
    description: "Should show help for helmfile when using help flag"
    workdir: "../"
    command: "atmos"
    args:
      - "helmfile"
      - "help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Available Commands:"
        - "apply"
        - "destroy"
      exit_code: 0
  - name: atmos helmfile apply non-existant
    enabled: true
    snapshot: true
    description: "Should show error in non atmos workspace"
    workdir: "../"
    command: "atmos"
    args:
      - "helmfile"
      - "apply"
      - "non-existent"
    expect:
      stdout:
        - "CLI config file specifies the directory for Atmos stack"
        - "Quick Start"
      exit_code: 1
  - name: atmos helmfile apply 
    enabled: true
    snapshot: true
    description: "Should show error in atmos workspace"
    workdir: "../examples/demo-helmfile"
    command: "atmos"
    args:
      - "helmfile"
      - "apply"
    expect:
      stderr:
        - "'stack' is required. Usage: atmos helmfile <command> <component> -s <stack>"
      exit_code: 1
  - name: atmos helmfile apply help
    enabled: true
    snapshot: true
    description: "Should show help for atmos helmfile apply"
    workdir: "../"
    command: "atmos"
    args:
      - "helmfile"
      - "apply"
      - "help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Flags:"
        - "--logs-file"
      exit_code: 0
  - name: atmos helmfile apply --help
    enabled: true
    snapshot: true
    description: "Should show help for atmos helmfile apply --help"
    workdir: "../"
    command: "atmos"
    args:
      - "helmfile"
      - "apply"
      - "--help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Flags:"
        - "--logs-file"
      exit_code: 0
  - name: atmos atlantis
    enabled: true
    snapshot: true
    description: "Should show usage atmos atlantis"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
    expect:
      stderr:
        - "Error: Unknown command: \"atmos atlantis\""
      exit_code: 1
  - name: atmos atlantis help
    enabled: true
    snapshot: true
    description: "Should show help 'atmos atlantis help'"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
      - "help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Available Commands:"
        - "generate"
      exit_code: 0
  - name: atmos atlantis --help
    enabled: true
    snapshot: true
    description: "Should show help 'atmos atlantis --help'"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
      - "--help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Available Commands:"
        - "generate"
      exit_code: 0

  - name: atmos atlantis generate
    enabled: true
    snapshot: true
    description: "Should show usage atmos atlantis"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
      - "generate"
    expect:
      stderr:
        - "Error: Unknown command: \"atmos atlantis generate\""
      exit_code: 1
  - name: atmos atlantis generate help
    enabled: true
    snapshot: true
    description: "Should show help 'atmos atlantis generate help'"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
      - "generate"
      - "help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Available Commands:"
        - "repo-config"
      exit_code: 0
  - name: atmos atlantis generate --help
    enabled: true
    snapshot: true
    description: "Should show help 'atmos atlantis --help'"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
      - "generate"
      - "--help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Available Commands:"
        - "repo-config"
      exit_code: 0
  - name: atmos atlantis generate repo-config
    enabled: true
    snapshot: true
    description: "Should show config missing in non atmos workspace 'atmos atlantis generate repo-config'"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
      - "generate"
      - "repo-config"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "atmos.yaml CLI config file specifies the directory for Atmos stacks as stacks,"
        - "To configure and start using Atmos, refer to the following documents:"
      stderr:
        - "^$"
      exit_code: 1
  - name: atmos atlantis generate repo-config help
    enabled: true
    snapshot: true
    description: "Should show help for 'atmos atlantis generate repo-config help'"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
      - "generate"
      - "repo-config"
      - "help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Flags:"
        - "--affected-only"
        - "--config-template"
      stderr:
        - "^$"
      exit_code: 0
  - name: atmos atlantis generate repo-config --help
    enabled: true
    snapshot: true
    description: "Should show help for 'atmos atlantis generate repo-config --help'"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
      - "generate"
      - "repo-config"
      - "--help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      stdout:
        - "Flags:"
        - "--affected-only"
        - "--config-template"
      stderr:
        - "^$"
      exit_code: 0
  - name: atmos atlantis generate repo-config non-existant
    enabled: true
    snapshot: true
    description: "Should show usage for 'atmos atlantis generate repo-config non-existant'"
    workdir: "../"
    command: "atmos"
    args:
      - "atlantis"
      - "generate"
      - "repo-config"
      - "non-existant"
    expect:
      stderr:
        - "Error: Unknown command \"non-existant\" for \"atmos atlantis generate repo-config\""
      exit_code: 1
  - name: atmos validate editorconfig help
    enabled: true
    description: "Should show help for 'atmos validate editorconfig help'"
    snapshot: true
    workdir: "../"
    command: atmos
    args:
      - "validate"
      - "editorconfig"
      - "help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      exit_code: 0
  - name: atmos validate editorconfig --help
    enabled: true
    description: "Should show help for 'atmos validate editorconfig --help'"
    snapshot: true
    workdir: "../"
    command: atmos
    args:
      - "validate"
      - "editorconfig"
      - "--help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      exit_code: 0
  - name: atmos validate editorconfig non-existant
    enabled: true
    description: "Should show usage for 'atmos validate editorconfig non-existant'"
    snapshot: true
    workdir: "../"
    command: atmos
    args:
      - "validate"
      - "editorconfig"
      - "non-existant"
    expect:
      exit_code: 1
  - name: atmos about non-existent
    enabled: true
    snapshot: true
    description: "'atmos about non-existent' should show expected message"
    workdir: "../"
    command: atmos
    args:
      - "about"
      - "non-existent"
    expect:
      exit_code: 1
  - name: atmos about --help
    enabled: true
    snapshot: true
    description: "'atmos about --help' should show help"
    workdir: "../"
    command: atmos
    args:
      - "about"
      - "--help"
    expect:
      diff:
        - "──────────────────────────────────────────────────────────────"
        - "Update available!"
        - "Atmos Releases:"
        - "Install Atmos:"
      exit_code: 0
  - name: atmos version --check --non-existent
    enabled: true
    snapshot: true
    description: "'atmos version --check --non-existent' should show invalid flag usage"
    workdir: "../"
    command: atmos
    args:
      - "version"
      - "--check"
      - "--non-existent"
    expect:
      exit_code: 1
  - name: atmos terraform plan station -s dev -- -no-color
    enabled: true
    snapshot: true
    description: "'atmos terraform plan station -s dev -- -no-color' should pass native flags to terraform without errors for flags"
    workdir: "../examples/quick-start-simple"
    command: atmos
    args:
      - "terraform"
      - "plan"
      - "station"
      - "-s"
      - "dev"
      - "--"
      - "-no-color"
    expect:
      exit_code: 0
