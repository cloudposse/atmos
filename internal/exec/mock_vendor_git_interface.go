// Code generated by MockGen. DO NOT EDIT.
// Source: vendor_git_interface.go

// Package exec is a generated GoMock package.
package exec

import (
	reflect "reflect"

	schema "github.com/cloudposse/atmos/pkg/schema"
	gomock "github.com/golang/mock/gomock"
)

// MockGitOperations is a mock of GitOperations interface.
type MockGitOperations struct {
	ctrl     *gomock.Controller
	recorder *MockGitOperationsMockRecorder
}

// MockGitOperationsMockRecorder is the mock recorder for MockGitOperations.
type MockGitOperationsMockRecorder struct {
	mock *MockGitOperations
}

// NewMockGitOperations creates a new mock instance.
func NewMockGitOperations(ctrl *gomock.Controller) *MockGitOperations {
	mock := &MockGitOperations{ctrl: ctrl}
	mock.recorder = &MockGitOperationsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGitOperations) EXPECT() *MockGitOperationsMockRecorder {
	return m.recorder
}

// CheckRef mocks base method.
func (m *MockGitOperations) CheckRef(gitURI, ref string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckRef", gitURI, ref)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckRef indicates an expected call of CheckRef.
func (mr *MockGitOperationsMockRecorder) CheckRef(gitURI, ref interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckRef", reflect.TypeOf((*MockGitOperations)(nil).CheckRef), gitURI, ref)
}

// GetDiffBetweenRefs mocks base method.
func (m *MockGitOperations) GetDiffBetweenRefs(atmosConfig *schema.AtmosConfiguration, gitURI, fromRef, toRef string, contextLines int, noColor bool) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiffBetweenRefs", atmosConfig, gitURI, fromRef, toRef, contextLines, noColor)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiffBetweenRefs indicates an expected call of GetDiffBetweenRefs.
func (mr *MockGitOperationsMockRecorder) GetDiffBetweenRefs(atmosConfig, gitURI, fromRef, toRef, contextLines, noColor interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiffBetweenRefs", reflect.TypeOf((*MockGitOperations)(nil).GetDiffBetweenRefs), atmosConfig, gitURI, fromRef, toRef, contextLines, noColor)
}

// GetRemoteTags mocks base method.
func (m *MockGitOperations) GetRemoteTags(gitURI string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRemoteTags", gitURI)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRemoteTags indicates an expected call of GetRemoteTags.
func (mr *MockGitOperationsMockRecorder) GetRemoteTags(gitURI interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRemoteTags", reflect.TypeOf((*MockGitOperations)(nil).GetRemoteTags), gitURI)
}
