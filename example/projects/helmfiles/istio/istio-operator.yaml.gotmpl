resources:

- apiVersion: install.istio.io/v1alpha1
  kind: IstioOperator
  metadata:
    namespace: istio-system
    name: "{{ .Values.istio_profile }}-istiocontrolplane"
  spec:
    profile: {{ .Values.istio_profile | quote }}
    meshConfig:
      accessLogEncoding: JSON
      accessLogFile: /dev/stdout
      disablePolicyChecks: false
    components:
      egressGateways:
      - name: istio-egressgateway
        enabled: true
        k8s:
          env:
          - name: ISTIO_META_ROUTER_MODE
            value: "sni-dnat"
          service:
            ports:
            - port: 80
              targetPort: 8080
              name: http2
            - port: 443
              targetPort: 8443
              name: https
            - port: 5432
              targetPort: 5432
              name: postgresql
          hpaSpec:
            maxReplicas: {{ .Values.egressgateway.hpaSpec.maxReplicas }}
            minReplicas: {{ .Values.egressgateway.hpaSpec.minReplicas }}
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-egressgateway
            metrics:
            - type: Resource
              resource:
                name: cpu
                targetAverageUtilization: 80
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2000m
              memory: 1024Mi
          strategy:
            rollingUpdate:
              maxSurge: "100%"
              maxUnavailable: "25%"

      ingressGateways:
      - name: istio-ingressgateway
        enabled: true
        label:
          gate: public
        k8s:
          serviceAnnotations:
{{ .Values.public_ingressgateway.serviceAnnotations | toYaml | indent 12 }}
          env:
          - name: ISTIO_META_ROUTER_MODE
            value: sni-dnat
          hpaSpec:
            maxReplicas: {{ .Values.public_ingressgateway.hpaSpec.maxReplicas }}
            metrics:
            - resource:
                name: cpu
                targetAverageUtilization: 80
              type: Resource
            minReplicas: {{ .Values.public_ingressgateway.hpaSpec.minReplicas }}
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-ingressgateway
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          service:
            ports:
            - name: http2
              port: 80
              targetPort: 8080
            - name: https
              port: 443
              targetPort: 8443
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
      - name: istio-internal-ingressgateway
        enabled: true
        label:
          gate: internal
        k8s:
          serviceAnnotations:
{{ .Values.internal_ingressgateway.serviceAnnotations | toYaml | indent 12 }}
          env:
          - name: ISTIO_META_ROUTER_MODE
            value: sni-dnat
          hpaSpec:
            maxReplicas: {{ .Values.internal_ingressgateway.hpaSpec.maxReplicas }}
            metrics:
            - resource:
                name: cpu
                targetAverageUtilization: 80
              type: Resource
            minReplicas: {{ .Values.internal_ingressgateway.hpaSpec.minReplicas }}
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-internal-ingressgateway
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          service:
            ports:
            - name: http2
              port: 80
              targetPort: 8080
            - name: https
              port: 443
              targetPort: 8443
            - port: 15021
              targetPort: 15021
              name: status-port
            - port: 15029
              targetPort: 15029
              name: https-kiali
            - port: 15030
              targetPort: 15030
              name: https-prometheus
            - port: 15031
              targetPort: 15031
              name: https-grafana
            - port: 15032
              targetPort: 15032
              name: https-tracing
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
      - name: istio-callback-ingressgateway
        enabled: true
        label:
          gate: callback
        k8s:
          serviceAnnotations:
{{ .Values.callback_ingressgateway.serviceAnnotations | toYaml | indent 12 }}
          env:
          - name: ISTIO_META_ROUTER_MODE
            value: sni-dnat
          hpaSpec:
            maxReplicas: {{ .Values.callback_ingressgateway.hpaSpec.maxReplicas }}
            metrics:
            - resource:
                name: cpu
                targetAverageUtilization: 80
              type: Resource
            minReplicas: {{ .Values.callback_ingressgateway.hpaSpec.minReplicas }}
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-callback-ingressgateway
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          service:
            ports:
            - name: http2
              port: 80
              targetPort: 8080
            - name: https
              port: 443
              targetPort: 8443
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%
      - name: istio-private-ingressgateway
        enabled: true
        label:
          gate: private
        k8s:
          serviceAnnotations:
{{ .Values.internal_ingressgateway.serviceAnnotations | toYaml | indent 12 }}
          env:
          - name: ISTIO_META_ROUTER_MODE
            value: sni-dnat
          hpaSpec:
            maxReplicas: {{ .Values.internal_ingressgateway.hpaSpec.maxReplicas }}
            metrics:
            - resource:
                name: cpu
                targetAverageUtilization: 80
              type: Resource
            minReplicas: {{ .Values.internal_ingressgateway.hpaSpec.minReplicas }}
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-private-ingressgateway
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          service:
            ports:
            - name: http2
              port: 80
              targetPort: 8080
            - name: https
              port: 443
              targetPort: 8443
            - port: 15021
              targetPort: 15021
              name: status-port
            - port: 15029
              targetPort: 15029
              name: https-kiali
            - port: 15030
              targetPort: 15030
              name: https-prometheus
            - port: 15031
              targetPort: 15031
              name: https-grafana
            - port: 15032
              targetPort: 15032
              name: https-tracing
          strategy:
            rollingUpdate:
              maxSurge: 100%
              maxUnavailable: 25%

    addonComponents:
      prometheus:
        enabled: true
        k8s:
          replicaCount: {{ .Values.prometheus.replicaCount }}
      kiali:
        enabled: true
        k8s:
          replicaCount: {{ .Values.kiali.replicaCount }}
      grafana:
        enabled: true
        k8s:
          replicaCount: {{ .Values.grafana.replicaCount }}
      tracing:
        enabled: true

    values:
      global:
        logAsJson: true

      pilot:
        replicaCount: {{ .Values.pilot.replicaCount }}

      gateways:
        istio-egressgateway:
          autoscaleEnabled: true
        istio-ingressgateway:
          autoscaleEnabled: true
          sds:
            enabled: true

      tracing:
        enabled: true

      grafana:
        enabled: true

      kiali:
        enabled: true
        createDemoSecret: true
        dashboard:
          jaegerURL: {{ printf "https://main.k8s.%v.%v.%v:15032/jaeger" .Values.stage .Values.environment .Values.root_domain | quote }}
          grafanaURL: {{ printf "https://main.k8s.%v.%v.%v:15031" .Values.stage .Values.environment .Values.root_domain | quote }}
